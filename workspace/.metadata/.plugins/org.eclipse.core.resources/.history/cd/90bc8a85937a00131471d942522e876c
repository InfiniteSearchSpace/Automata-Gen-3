

import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.JPanel;


@SuppressWarnings("serial")
public class ml extends JPanel implements MouseListener {

	Main m;
	SurfacePanel s;
	Point p;
	Point p2;
	int myFunction = 0;
	int fcnt = 8;
	
    public ml(Main mm, SurfacePanel ss) {
    	m=mm;
    	s=ss;
    	
        m.addMouseListener(this);
        addMouseListener(this);
    }
    
    void eventOutput(String eventDescription, MouseEvent e) {
        System.out.println(eventDescription + " detected on "
                + e.getComponent().getClass().getName()
                + ".");
    }
    
    public void mousePressed(MouseEvent e) {
    	p = MouseInfo.getPointerInfo().getLocation();
    	p2 = m.getLocation();
    	int mx =p.x-p2.x-1;
    	int my =p.y-p2.y-26;

    	if (myFunction ==  0 && e.getButton() == MouseEvent.BUTTON1) { //Place One
    		s.a.seed(mx, my, 0, 1);
    	}
    	
    	if (myFunction ==  1 && e.getButton() == MouseEvent.BUTTON1) { //Place Block
	    	int num = 4;
			for(int i = 0; i < num*2; i++){
				s.a.placeLine(mx-num, (my+i)-num, 0, 1, mx+num, false, true, 1, 1);
			}
    	}

		if (myFunction ==  2 && e.getButton() == MouseEvent.BUTTON1) { //chance block			
			int num = 16;
			for(int i = 0; i < num*2; i++){
	    		s.a.placeLine(mx-num, (my+i)-num, 0, 64, mx+num, false, true, 1, 1);
	    	}
		}
		
		if (myFunction == 3 && e.getButton() == MouseEvent.BUTTON1) { //delete one
			s.a.placeO(mx, my, 0);
		}
		
		if (myFunction ==  4 && e.getButton() == MouseEvent.BUTTON1) { //chance delete
			int num = 12;
			for(int i = 0; i < num*2; i++){
		    	s.a.placeLineO(mx-num, (my+i)-num, 0, 4, mx+num, false, true, 1);
		    }
		}
		
		if (myFunction ==  5 && e.getButton() == MouseEvent.BUTTON1) { //hard delete
			int num = 6;
			for(int i = 0; i < num*2; i++){
	    		s.a.placeLineO(mx-num, (my+i)-num, 0, 1, mx+num, false, true, 1);
	    	}
		}
		
		if (myFunction ==  6 && e.getButton() == MouseEvent.BUTTON1) { //clear
			s.u.resetAr(0);
		}
		
		if (myFunction ==  7 && e.getButton() == MouseEvent.BUTTON1) { //chance block	
			int num = 4;
			for(int i = 0; i < num*2; i++){
				s.a.placeLine(mx-num, (my+i)-num, 0, 1, mx+num, false, true, 1, 30);
			}
		}
		
		if (myFunction ==  99 && e.getButton() == MouseEvent.BUTTON1) {
			//print a square out as an integer array
			//Read an integer array onto board
			//additional menus
		}

    	
    	
    	if(e.getButton() == MouseEvent.BUTTON3) { //Right Click - Pause
    		if(s.paused ) { s.paused = false; } else { s.paused = true; }
    	}
    	
    	if(e.getButton() == MouseEvent.BUTTON2) { //Left Click - Scroll Functions
    		myFunction++;
    		myFunction=myFunction%fcnt;
    	}
    	
    }
    
    public void mouseReleased(MouseEvent e) {
    	
    }
    
    public void mouseEntered(MouseEvent e) {

    }
    
    public void mouseExited(MouseEvent e) {

    }
    
    public void mouseClicked(MouseEvent e) {

    }
}